{"version":3,"sources":["redux/types.js","redux/rootReduser.js","dataProcessing/stateMap.js","redux/actions.js","components/UploadButton/index.js","components/LawyersTable/LawyersTableRow.js","components/LawyersTable/index.js","dataProcessing/dataValidate.js","App.js","reportWebVitals.js","dataProcessing/checkDuplicate.js","index.js","dataProcessing/insertID.js","dataProcessing/phoneCheck.js"],"names":["SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","INSERT_DATA_FROM_CSV","initialState","loading","data","stateMap","hideLoader","type","showAlert","text","dispatch","payload","setTimeout","useStyles","makeStyles","theme","root","margin","spacing","input","display","UploadButton","setData","classes","useDispatch","className","id","onChange","e","event","a","require","parse","target","files","header","transform","value","trim","isNaN","parseFloat","toFixed","parseInt","prop","regExp","RegExp","replace","complete","results","htmlFor","Button","variant","color","component","error","background","LawyersTableRow","row","TableRow","map","i","TableCell","align","errors","includes","tableWrapper","marginBottom","table","minWidth","borderLeft","LawyersTable","TableContainer","Paper","Table","size","aria-label","TableHead","TableBody","validate","extend","validators","datetime","options","moment","utc","format","constraints","age","numericality","onlyInteger","greaterThan","experience","attributes","greaterThanOrEqualTo","lessThan","yearlyIncome","email","presence","hasChildren","inclusion","within","licenseStates","regexp","licenseNumber","pattern","flags","expirationDate","earliest","App","useSelector","state","Typography","gutterBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","findDuplicateItem","attr","forEach","item","index","array","duplicate","findIndex","idx","store","createStore","action","alert","compose","applyMiddleware","thunk","next","newData","test","phone","Object","keys","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7362941.chunk.js","sourcesContent":["export const SHOW_LOADER = 'SHOW_LOADER'\r\nexport const HIDE_LOADER = 'HIDE_LOADER'\r\nexport const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const INSERT_DATA_FROM_CSV = 'INSERT_DATA_FROM_CSV'\r\n","import { HIDE_LOADER, SHOW_LOADER, SHOW_ALERT, HIDE_ALERT, INSERT_DATA_FROM_CSV } from './types'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: null\r\n}\r\n\r\nexport const rootReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER: {\r\n      return {...state, loading: true}\r\n    }\r\n    case HIDE_LOADER: {\r\n      return {...state, loading: false}\r\n    }\r\n    case SHOW_ALERT: {\r\n      return {...state, alert: action.payload}\r\n    }\r\n    case HIDE_ALERT: {\r\n      return {...state, alert: null}\r\n    }\r\n    case INSERT_DATA_FROM_CSV: {\r\n      return {...state, data: action.payload}\r\n    }\r\n    default: return state\r\n  }\r\n}","export const stateMap = {\r\n  \"Alabama\": \"AL\",\r\n  \"Alaska\": \"AK\",\r\n  \"Arizona\": \"AZ\",\r\n  \"Arkansas\": \"AR\",\r\n  \"California\": \"CA\",\r\n  \"Colorado\": \"CO\",\r\n  \"Connecticut\": \"CT\",\r\n  \"Delaware\": \"DE\",\r\n  \"Florida\": \"FL\",\r\n  \"Georgia\": \"GA\",\r\n  \"Hawaii\": \"HI\",\r\n  \"Idaho\": \"ID\",\r\n  \"Illinois\": \"IL\",\r\n  \"Indiana\": \"IN\",\r\n  \"Iowa\": \"IA\",\r\n  \"Kansas\": \"KS\",\r\n  \"Kentucky\": \"KY\",\r\n  \"Louisiana\": \"LA\",\r\n  \"Maine\": \"ME\",\r\n  \"Maryland\": \"MD\",\r\n  \"Massachusetts\": \"MA\",\r\n  \"Michigan\": \"MI\",\r\n  \"Minnesota\": \"MN\",\r\n  \"Mississippi\": \"MS\",\r\n  \"Missouri\": \"MO\",\r\n  \"Montana\": \"MT\",\r\n  \"Nebraska\": \"NE\",\r\n  \"Nevada\": \"NV\",\r\n  \"New York\": \"NY\",\r\n  \"North\": \"ND\",\r\n  \"Ohio\": \"OH\",\r\n  \"Oklahoma\": \"OK\",\r\n  \"Oregon\": \"OR\",\r\n  \"Pennsylvania\": \"PA\",\r\n  \"Rhode\": \"RI\",\r\n  \"South\": \"SD\",\r\n  \"Tennessee\": \"TN\",\r\n  \"Texas\": \"TX\",\r\n  \"Utah\": \"UT\",\r\n  \"Vermont\": \"VT\",\r\n  \"Virginia\": \"VA\",\r\n  \"Washington\": \"WA\",\r\n  \"West\": \"WV\",\r\n  \"Wisconsin\": \"WI\",\r\n  \"Wyoming\": \"WY\"\r\n}","import { SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, INSERT_DATA_FROM_CSV } from './types'\r\nimport { stateMap } from '../dataProcessing/stateMap'\r\n\r\nexport function showLoader() {\r\n  return {\r\n    type: SHOW_LOADER\r\n  }\r\n}\r\n\r\nexport function hideLoader() {\r\n  return {\r\n    type: HIDE_LOADER\r\n  }\r\n}\r\n\r\nexport function showAlert(text) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: text\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch(hideAlert())\r\n    }, 1500)\r\n  }\r\n}\r\n\r\nexport function hideAlert() {\r\n  return {\r\n    type: HIDE_ALERT\r\n  }\r\n}\r\n\r\nexport function insertDataFromCSV(event) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(showLoader())\r\n      var Papa = require(\"papaparse/papaparse.min.js\")\r\n      Papa.parse(event.target.files[0], {\r\n        header: true,\r\n        transform: function(value, header) {\r\n          value = value.trim()\r\n          if (header === 'yearlyIncome') {\r\n            if (!isNaN(parseFloat(value))) {\r\n              value = parseFloat(value).toFixed(2)\r\n            }\r\n          }\r\n          if (header === 'age' || header === 'experience') {\r\n            if (!isNaN(parseInt(value))) {\r\n              value = parseInt(value)\r\n            }\r\n          }\r\n          if (header === 'hasChildren') {\r\n            if (value === '') {\r\n              value = 'false'\r\n            }\r\n          }\r\n          if (header === 'licenseStates') {\r\n            for (let prop in stateMap) {\r\n              let regExp = new RegExp(`${prop}`, 'ig')\r\n              value = value.replace(regExp, stateMap[prop])\r\n            }\r\n          }\r\n          return value\r\n        },\r\n        complete: function(results) {\r\n          dispatch({type: INSERT_DATA_FROM_CSV, payload: results.data})\r\n          dispatch(hideLoader())\r\n        }\r\n      })\r\n    } catch (e) {\r\n      dispatch(showAlert('Что-то пошло не так'))\r\n      dispatch(hideLoader())\r\n    }\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport { useDispatch } from 'react-redux'\r\nimport { insertDataFromCSV } from '../../redux/actions'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function UploadButton({ setData }) {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        type=\"file\"\r\n        onChange={e => dispatch(insertDataFromCSV(e))}\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          Upload\r\n        </Button>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  error: {\r\n    background: 'rgba(255, 150, 150, .7)!important'\r\n  }\r\n})\r\n\r\nexport default function LawyersTableRow({ row }) {\r\n  const classes = useStyles()\r\n\r\n  const cells = ['id', 'fullName', 'phone', 'email', 'age', 'experience', 'yearlyIncome', 'hasChildren', 'licenseStates', 'expirationDate', 'licenseNumber', 'duplicate']\r\n\r\n  return (\r\n    <TableRow>\r\n      {cells.map(i => <TableCell align=\"right\" key={i} className={row.errors.includes(i) && i !== 'id' && i!=='fullName' && i!== 'duplicate' ? classes.error : ''}>{row[i]}</TableCell>)}\r\n    </TableRow>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport  TableContainer  from '@material-ui/core/TableContainer'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport LawyersTableRow from './LawyersTableRow'\r\n\r\nconst useStyles = makeStyles({\r\n  tableWrapper: {\r\n    marginBottom: '2em',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n    '& th': {\r\n      background: '#9999FF',\r\n      borderLeft: '1px solid #CCCCCC',\r\n    },\r\n    '& td': {\r\n      borderLeft: '1px solid #CCCCCC',\r\n    },\r\n    '& tr:nth-of-type(odd)': {\r\n      background: '#ECECEC'\r\n    }\r\n  }\r\n})\r\n\r\nexport default function LawyersTable({ data }) {\r\n  const classes = useStyles();\r\n\r\n  const cells = ['ID', 'Full Name', 'Phone', 'Email', 'Age', 'Experience', 'Yearly Income', 'Has children', 'License states', 'Expiration date', 'License number', 'Duplicate with']\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.tableWrapper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {cells.map(i => <TableCell key={i} align=\"right\">{i}</TableCell>)}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => <LawyersTableRow row={row}  key={row.id} />)}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { INSERT_DATA_FROM_CSV } from \"../redux/types\"\r\nimport { stateMap } from './stateMap'\r\nimport moment from 'moment'\r\nvar validate = require(\"validate.js\")\r\n\r\n\r\nvalidate.extend(validate.validators.datetime, {\r\n  parse: function(value, options) {\r\n    return +moment.utc(value, [\"YYYY-MM-DD\", \"MM/DD/YYYY\"], true)\r\n  },\r\n  format: function(value, options) {\r\n    var format = \"YYYY-MM-DD\"\r\n    return moment.utc(value).format(format)\r\n  }\r\n});\r\n\r\nconst constraints = {\r\n  age: {\r\n    numericality: {\r\n      onlyInteger: true,\r\n      greaterThan: 20,\r\n    }\r\n  },\r\n  experience: function(value, attributes) {\r\n    return {\r\n      numericality: {\r\n        greaterThanOrEqualTo: 0,\r\n        lessThan: attributes.age\r\n      }\r\n    }\r\n  },\r\n  yearlyIncome: {\r\n    numericality: {\r\n      lessThan: 1000000\r\n    }\r\n  },\r\n  email: {\r\n    presence: true,\r\n    email: true\r\n  },\r\n  hasChildren: {\r\n    inclusion: {\r\n      within: ['true', 'false']\r\n    }\r\n  },\r\n  licenseStates: function(value) {\r\n    for (let prop in stateMap) {\r\n      let regexp = new RegExp(`(^| |\\\\|)${stateMap[prop]}( |$|\\\\|)`, 'gi')\r\n      value = value.replace(regexp, '')\r\n    }\r\n    let regexp = /\\|/g\r\n    value = value.replace(regexp, '')\r\n    if (value.trim() === '') {\r\n      return false\r\n    }\r\n    return {\r\n      inclusion: {\r\n        within: ['AL']\r\n      }\r\n    }\r\n  },\r\n  licenseNumber: {\r\n    format: {\r\n      pattern: \"[a-z0-9]{6}\",\r\n      flags: \"i\"\r\n    }\r\n  },\r\n  expirationDate: {\r\n    presence: true,\r\n    datetime: {\r\n      // dateOnly: true,\r\n      earliest: moment.utc()\r\n    }\r\n  }\r\n}\r\n\r\nexport function dataValidate({ dispatch }) {\r\n  return function(next) {\r\n    return function(action) {\r\n      if (action.type === INSERT_DATA_FROM_CSV) {\r\n        const newData = action.payload.map((i, idx) => {\r\n          let error = validate(i, constraints)\r\n          if (error) return {...i, errors: [...i.errors, ...Object.keys(error)]}\r\n          return i\r\n        })\r\n        action.payload = newData\r\n      }\r\n\r\n      return next(action)\r\n    } \r\n  }\r\n}\r\n","import { useSelector } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport UploadButton from './components/UploadButton'\nimport LawyersTable from './components/LawyersTable'\nimport './dataProcessing/dataValidate'\n\nfunction App() {\nconst data = useSelector(state => state.data)\n\n  return (\n    <div className=\"App\">\n      <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n        Welcome to the best lawyers app\n      </Typography>\n      {data && <LawyersTable data={data}/>}\n      <Typography variant=\"h5\" gutterBottom>\n        Please, choose the CSV file you want to parse\n      </Typography>\n      <UploadButton />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { INSERT_DATA_FROM_CSV } from \"../redux/types\"\r\n\r\nexport function checkDuplicate({ dispatch }) {\r\n  return function(next) {\r\n    return function(action) {\r\n      if (action.type === INSERT_DATA_FROM_CSV) {\r\n        \r\n        findDuplicateItem(action.payload, 'phone')\r\n        findDuplicateItem(action.payload, 'email')\r\n\r\n      }\r\n      return next(action)\r\n    } \r\n  }\r\n}\r\n\r\nfunction findDuplicateItem(data, attr) {\r\n  data.forEach((item, index, array) => {\r\n    let duplicate = array.findIndex((i, idx) => {\r\n      return item[attr] === i[attr] && index !== idx\r\n    })\r\n    if (duplicate !== -1) {\r\n      data[index].duplicate ?\r\n        data[index].duplicate = data[index].duplicate + ', ' + (duplicate + 1) :\r\n        data[index].duplicate = '' + (duplicate + 1)\r\n    }\r\n  })\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\n\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { rootReduser } from './redux/rootReduser.js'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { insertID } from './dataProcessing/insertID'\nimport { phoneCheck } from './dataProcessing/phoneCheck'\nimport { dataValidate } from './dataProcessing/dataValidate'\nimport { checkDuplicate } from './dataProcessing/checkDuplicate'\n\n\nconst store = createStore(rootReduser, compose(\n  applyMiddleware(\n    thunk, insertID, phoneCheck, dataValidate, checkDuplicate\n  ),\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// insert id and empty array for errors in each rows\r\nimport { INSERT_DATA_FROM_CSV } from \"../redux/types\"\r\n\r\nexport function insertID({ dispatch }) {\r\n  return function(next) {\r\n    return function(action) {\r\n      if (action.type === INSERT_DATA_FROM_CSV) {\r\n        const newData = action.payload.map((i, idx) => {\r\n          return ({\r\n            id: idx + 1,\r\n            errors: [],\r\n            ...i\r\n          })\r\n        })\r\n        action.payload = newData\r\n      }\r\n      return next(action)\r\n    } \r\n  }\r\n}\r\n","// check phone number and convert it to the +1xxxxxxx format\r\nimport { INSERT_DATA_FROM_CSV } from \"../redux/types\"\r\n\r\nexport function phoneCheck({ dispatch }) {\r\n  return function(next) {\r\n    return function(action) {\r\n      if (action.type === INSERT_DATA_FROM_CSV) {\r\n        const newData = action.payload.map((i, idx) => {\r\n          let regexp = /^(\\+1|1)?(\\d{10})$/\r\n          if (regexp.test(i.phone)) {\r\n            return {...i, phone: `${i.phone}`.replace(regexp, '+1$2' )}\r\n          }\r\n          return {...i, errors: ['phone', ...i.errors]}\r\n        })\r\n        action.payload = newData\r\n      }\r\n\r\n      return next(action)\r\n    } \r\n  }\r\n}\r\n"],"sourceRoot":""}